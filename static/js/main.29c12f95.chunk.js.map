{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","craze","mode","href","title","type","id","tt","onClick","toggleCraze","style","height","width","borderRadius","toggleMode","role","htmlFor","text","TextForm","useState","setText","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","toLowerCase","CapitalizeWords","i","length","previousCharacter","split","join","showAlert","Alert","alert","word","tex","charAt","slice","capital","msg","defaultProps","aboutText","App","setCraze","setTt","setMode","setAlert","changeAlert","message","setTimeout","document","body","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.29c12f95.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n    return (\r\n                <nav className={`navbar navbar-expand-lg navbar-${props.craze==='info'?'success':'info',props.mode} bg-${props.craze,props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n        </li> */}\r\n      </ul>\r\n      <p className=\"my-3\">Go {props.tt}</p>\r\n      <button type=\"button\" className={`btn btn-${props.craze} mx-2`} onClick={props.toggleCraze} style={{height:'25px',width:'10px',borderRadius:'50%'}}></button>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n      <input className=\"form-check-input\" onClick={props.toggleMode}type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.text}</label>\r\n      </div>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n    )\r\n}\r\nNavbar.propTypes={\r\n                title:PropTypes.string,\r\n                aboutText:PropTypes.string\r\n            }\r\n\r\nNavbar.defaultProps={\r\n            title:\"Set-Title-Here\",\r\n            aboutText:\"About-Text-Here\"\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleOnClick=()=>{\r\n        console.log(\"Uppercase was clicked\"+text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLoClick=()=>{\r\n        console.log(\"Lowercase was clicked\"+text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText=\"\";\r\n        setText(newText);\r\n        props.showAlert(\"The Text entered will be Deleted\",\"warning\");\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n    const handleCapClick=()=>{\r\n        let tt=text;\r\n        var CapitalizeWords = tt[0].toUpperCase();  \r\n        for (var i = 1; i <= tt.length - 1; i++) {  \r\n            let currentCharacter,  \r\n                previousCharacter = tt[i - 1];  \r\n            if (previousCharacter && previousCharacter === ' ') {  \r\n                currentCharacter = tt[i].toUpperCase();  \r\n            } \r\n            else{  \r\n                currentCharacter = tt[i];  \r\n            }  \r\n            CapitalizeWords = CapitalizeWords + currentCharacter;  \r\n        }  \r\n        setText(CapitalizeWords);\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        console.log(\"on change\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"Enter your text here<don't forget to erase me first ^_^>\");\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"MyBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={handleOnClick}>Convert To UpperCase</button>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={handleLoClick}>Convert To LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={handleCapClick}>Convert To CapitalizedCase</button>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={handleExtraSpaces}>To remove Excess Spaces</button>\r\n            <button className=\"btn btn-primary mx-1 my-2\" onClick={handleClearClick}>Clear</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n                <h2>Your text Summary</h2>\r\n                <p>{text.split(\" \").length-1} words and {text.length} Characters</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capital=(word)=>{\r\n        const tex=word.toLowerCase();\r\n        return tex.charAt(0).toUpperCase()+tex.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capital(props.alert.type)}: </strong>{props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React,{useState} from \"react\";\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [craze, setCraze] = useState('success');\n  const [tt, setTt] = useState(\"Green\")\n  const toggleCraze=()=>{\n    if(craze==='success'){\n      setCraze('light');\n      setTt(\"White\");\n      document.body.style.backgroundColor='#86E7D0';\n      document.body.style.color='black';\n      changeAlert(\"Craze mode enabled\",\"success\");\n    }\n    else{\n      setCraze('success');\n      setTt(\"Green\");\n      setText(\"Enable Dark Mode\");\n      document.body.style.backgroundColor='white';\n      document.body.style.color='black';\n      changeAlert(\"light mode enabled\",\"success\");\n    }\n  }\n  const [text, setText] = useState(\"Enable Dark Mode\")\n  const [mode, setMode] = useState('light'); // whether dark mode is available or not\n  const [alert, setAlert] = useState(null);\n  const changeAlert=(message,type)=>{\n      setAlert({\n        msg:message,\n        type:type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      },1500);\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      setText(\"Enable Light Mode\");\n      document.body.style.backgroundColor='black';\n      document.body.style.color='white';\n      changeAlert(\"dark mode enabled\",\"success\");\n      document.title=\"Scrippty-Dark_Mode\";\n      // setMystyle({\n      //   color:\"white\",\n      //   backgroundColor:\"black\"\n      // })\n      // setInterval(() => {\n      //   document.title=\"Download-Scripty-now\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title=\"Scrippty-Dark_Mode\";\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      setText(\"Enable Dark Mode\");\n      document.body.style.backgroundColor='white';\n      document.body.style.color='black';\n      changeAlert(\"light mode enabled\",\"success\");\n      document.title=\"Scrippty-Light_Mode\";\n      // setMystyle({\n      //   color:\"black\",\n      //   backgroundColor:\"white\"\n      // })\n      // setInterval(() => {\n      //   document.title=\"Download-Scripty-now\";\n      // }, 1000);\n\n    }\n  }\n//   const [mystyle, setMystyle] = useState({\n//     color:\"black\",\n//     backgroundColor:\"white\"\n// })\n  return (\n    <>\n      {/* <Navbar title=\"Scrippty\" aboutText=\"About-Scrippty\" mode={mode}/> */}\n      {/* <Router> */}\n      <Navbar title=\"Scrippty\"  mode={mode} toggleMode={toggleMode} text={text} craze={craze} toggleCraze={toggleCraze} tt={tt}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About myStyle={mystyle} />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm showAlert={changeAlert} heading=\"Enter the text to Analyze\"  mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}